{"ast":null,"code":"export const addProduct = (product, shoppingcart, isAuthenticated, handleShowAlreadyAdded, postProduct, user, props, handleShowLoginError) => {\n  const cartItems = [];\n  shoppingcart.map(item => cartItems.push(item.product.productId));\n\n  if (isAuthenticated) {\n    // If the item already exists in the cart, show modal alert\n    if (cartItems.includes(product.productId)) {\n      handleShowAlreadyAdded();\n    } // Otherwise add a new item to the cart\n    else {\n        postProduct(user.email, product).then(window.setTimeout(() => {\n          props.history.push('/cart');\n        }, 1000));\n      }\n  } else {\n    handleShowLoginError();\n  }\n};\nexport const delProduct = (deleteProduct, product, user) => {\n  deleteProduct(user.email, product).then(window.setTimeout(() => {\n    window.location.reload(false);\n  }, 1000));\n};","map":{"version":3,"sources":["/Users/lexisandoval/lexis-locker-frontend/src/functions/product.js"],"names":["addProduct","product","shoppingcart","isAuthenticated","handleShowAlreadyAdded","postProduct","user","props","handleShowLoginError","cartItems","map","item","push","productId","includes","email","then","window","setTimeout","history","delProduct","deleteProduct","location","reload"],"mappings":"AAAA,OAAO,MAAMA,UAAU,GAAG,CAACC,OAAD,EAAUC,YAAV,EAAwBC,eAAxB,EAAyCC,sBAAzC,EAAiEC,WAAjE,EAA8EC,IAA9E,EAAoFC,KAApF,EAA2FC,oBAA3F,KAAoH;AAC5I,QAAMC,SAAS,GAAG,EAAlB;AACAP,EAAAA,YAAY,CAACQ,GAAb,CAAiBC,IAAI,IAAIF,SAAS,CAACG,IAAV,CAAeD,IAAI,CAACV,OAAL,CAAaY,SAA5B,CAAzB;;AAEA,MAAIV,eAAJ,EAAqB;AACnB;AACA,QAAIM,SAAS,CAACK,QAAV,CAAmBb,OAAO,CAACY,SAA3B,CAAJ,EAA2C;AACzCT,MAAAA,sBAAsB;AACvB,KAFD,CAGA;AAHA,SAIK;AACHC,QAAAA,WAAW,CAACC,IAAI,CAACS,KAAN,EAAad,OAAb,CAAX,CACGe,IADH,CAEIC,MAAM,CAACC,UAAP,CAAkB,MAAM;AACtBX,UAAAA,KAAK,CAACY,OAAN,CAAcP,IAAd,CAAmB,OAAnB;AACD,SAFD,EAEG,IAFH,CAFJ;AAMD;AACF,GAdD,MAeK;AACHJ,IAAAA,oBAAoB;AACrB;AACF,CAtBM;AAwBP,OAAO,MAAMY,UAAU,GAAG,CAACC,aAAD,EAAgBpB,OAAhB,EAAyBK,IAAzB,KAAkC;AAC1De,EAAAA,aAAa,CAACf,IAAI,CAACS,KAAN,EAAad,OAAb,CAAb,CACGe,IADH,CAEIC,MAAM,CAACC,UAAP,CAAkB,MAAM;AACtBD,IAAAA,MAAM,CAACK,QAAP,CAAgBC,MAAhB,CAAuB,KAAvB;AACD,GAFD,EAEG,IAFH,CAFJ;AAMD,CAPM","sourcesContent":["export const addProduct = (product, shoppingcart, isAuthenticated, handleShowAlreadyAdded, postProduct, user, props, handleShowLoginError) => {\n  const cartItems = []\n  shoppingcart.map(item => cartItems.push(item.product.productId))\n\n  if (isAuthenticated) {\n    // If the item already exists in the cart, show modal alert\n    if (cartItems.includes(product.productId)) {\n      handleShowAlreadyAdded()\n    }\n    // Otherwise add a new item to the cart\n    else {\n      postProduct(user.email, product)\n        .then(\n          window.setTimeout(() => {\n            props.history.push('/cart')\n          }, 1000\n          ))\n    }\n  }\n  else {\n    handleShowLoginError()\n  }\n}\n\nexport const delProduct = (deleteProduct, product, user) => {\n  deleteProduct(user.email, product)\n    .then(\n      window.setTimeout(() => {\n        window.location.reload(false)\n      }, 1000\n      ))\n}"]},"metadata":{},"sourceType":"module"}