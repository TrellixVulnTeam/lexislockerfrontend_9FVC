{"ast":null,"code":"import { deleteProduct } from \"../api/cartAPI\";\nexport const addProduct = (product, shoppingcart, isAuthenticated, handleShowAlreadyAdded, postProduct, user, props, handleShowLoginError) => {\n  const cartItems = [];\n  shoppingcart.map(item => cartItems.push(item.product.productId));\n\n  if (isAuthenticated) {\n    // If the item already exists in the cart, show modal alert\n    if (cartItems.includes(product.productId)) {\n      handleShowAlreadyAdded();\n    } // Otherwise add a new item to the cart\n    else {\n        postProduct(user.email, product).then(window.setTimeout(() => {\n          props.history.push('/cart');\n        }, 1000));\n      }\n  } else {\n    handleShowLoginError();\n  }\n};\nexport const delProduct = (product, user) => {\n  deleteProduct(user.email, product).then(window.setTimeout(() => {\n    window.location.reload(false);\n  }, 1000));\n};\nexport const delAllProducts = (shoppingcart, user) => {\n  shoppingcart.map(p => {\n    return deleteProduct(user.email, p.product).then(window.setTimeout(() => {\n      window.location.reload(false);\n    }, 3000));\n  });\n};","map":{"version":3,"sources":["/Users/lexisandoval/lexis-locker-frontend/src/functions/product.js"],"names":["deleteProduct","addProduct","product","shoppingcart","isAuthenticated","handleShowAlreadyAdded","postProduct","user","props","handleShowLoginError","cartItems","map","item","push","productId","includes","email","then","window","setTimeout","history","delProduct","location","reload","delAllProducts","p"],"mappings":"AAAA,SAASA,aAAT,QAA8B,gBAA9B;AAEA,OAAO,MAAMC,UAAU,GAAG,CAACC,OAAD,EAAUC,YAAV,EAAwBC,eAAxB,EAAyCC,sBAAzC,EAAiEC,WAAjE,EAA8EC,IAA9E,EAAoFC,KAApF,EAA2FC,oBAA3F,KAAoH;AAC5I,QAAMC,SAAS,GAAG,EAAlB;AACAP,EAAAA,YAAY,CAACQ,GAAb,CAAiBC,IAAI,IAAIF,SAAS,CAACG,IAAV,CAAeD,IAAI,CAACV,OAAL,CAAaY,SAA5B,CAAzB;;AAEA,MAAIV,eAAJ,EAAqB;AACnB;AACA,QAAIM,SAAS,CAACK,QAAV,CAAmBb,OAAO,CAACY,SAA3B,CAAJ,EAA2C;AACzCT,MAAAA,sBAAsB;AACvB,KAFD,CAGA;AAHA,SAIK;AACHC,QAAAA,WAAW,CAACC,IAAI,CAACS,KAAN,EAAad,OAAb,CAAX,CACGe,IADH,CAEIC,MAAM,CAACC,UAAP,CAAkB,MAAM;AACtBX,UAAAA,KAAK,CAACY,OAAN,CAAcP,IAAd,CAAmB,OAAnB;AACD,SAFD,EAEG,IAFH,CAFJ;AAMD;AACF,GAdD,MAeK;AACHJ,IAAAA,oBAAoB;AACrB;AACF,CAtBM;AAwBP,OAAO,MAAMY,UAAU,GAAG,CAACnB,OAAD,EAAUK,IAAV,KAAmB;AAC3CP,EAAAA,aAAa,CAACO,IAAI,CAACS,KAAN,EAAad,OAAb,CAAb,CACGe,IADH,CAEIC,MAAM,CAACC,UAAP,CAAkB,MAAM;AACtBD,IAAAA,MAAM,CAACI,QAAP,CAAgBC,MAAhB,CAAuB,KAAvB;AACD,GAFD,EAEG,IAFH,CAFJ;AAMD,CAPM;AASP,OAAO,MAAMC,cAAc,GAAG,CAACrB,YAAD,EAAeI,IAAf,KAAwB;AACpDJ,EAAAA,YAAY,CAACQ,GAAb,CACEc,CAAC,IAAI;AACH,WACEzB,aAAa,CAACO,IAAI,CAACS,KAAN,EAAaS,CAAC,CAACvB,OAAf,CAAb,CACGe,IADH,CAEIC,MAAM,CAACC,UAAP,CAAkB,MAAM;AACtBD,MAAAA,MAAM,CAACI,QAAP,CAAgBC,MAAhB,CAAuB,KAAvB;AACD,KAFD,EAEG,IAFH,CAFJ,CADF;AAQD,GAVH;AAYD,CAbM","sourcesContent":["import { deleteProduct } from \"../api/cartAPI\"\n\nexport const addProduct = (product, shoppingcart, isAuthenticated, handleShowAlreadyAdded, postProduct, user, props, handleShowLoginError) => {\n  const cartItems = []\n  shoppingcart.map(item => cartItems.push(item.product.productId))\n\n  if (isAuthenticated) {\n    // If the item already exists in the cart, show modal alert\n    if (cartItems.includes(product.productId)) {\n      handleShowAlreadyAdded()\n    }\n    // Otherwise add a new item to the cart\n    else {\n      postProduct(user.email, product)\n        .then(\n          window.setTimeout(() => {\n            props.history.push('/cart')\n          }, 1000\n          ))\n    }\n  }\n  else {\n    handleShowLoginError()\n  }\n}\n\nexport const delProduct = (product, user) => {\n  deleteProduct(user.email, product)\n    .then(\n      window.setTimeout(() => {\n        window.location.reload(false)\n      }, 1000\n      ))\n}\n\nexport const delAllProducts = (shoppingcart, user) => {\n  shoppingcart.map(\n    p => {\n      return (\n        deleteProduct(user.email, p.product)\n          .then(\n            window.setTimeout(() => {\n              window.location.reload(false)\n            }, 3000\n            ))\n      )\n    }\n  )\n}"]},"metadata":{},"sourceType":"module"}