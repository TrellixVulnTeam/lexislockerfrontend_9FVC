{"ast":null,"code":"var _jsxFileName = \"/Users/lexisandoval/lexis-locker-frontend/src/components/ErrorModal.js\";\nimport React from \"react\";\nimport { Modal } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ErrorAlreadyAddedModal = (showAlreadyAdded, handleCloseAlreadyAdded) => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Modal, {\n      show: showAlreadyAdded,\n      onHide: handleCloseAlreadyAdded,\n      children: /*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"thin my-auto\",\n          children: \"This product is already in your cart\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_c = ErrorAlreadyAddedModal;\nexport default ErrorAlreadyAddedModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"ErrorAlreadyAddedModal\");","map":{"version":3,"sources":["/Users/lexisandoval/lexis-locker-frontend/src/components/ErrorModal.js"],"names":["React","Modal","ErrorAlreadyAddedModal","showAlreadyAdded","handleCloseAlreadyAdded"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,iBAAtB;;;;AAGA,MAAMC,sBAAsB,GAAG,CAACC,gBAAD,EAAmBC,uBAAnB,KAA+C;AAE5E,sBACE;AAAA,2BACE,QAAC,KAAD;AAAO,MAAA,IAAI,EAAED,gBAAb;AAA+B,MAAA,MAAM,EAAEC,uBAAvC;AAAA,6BACE,QAAC,KAAD,CAAO,MAAP;AAAc,QAAA,WAAW,MAAzB;AAAA,+BACE;AAAI,UAAA,SAAS,EAAC,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAcD,CAhBD;;KAAMF,sB;AAkBN,eAAeA,sBAAf","sourcesContent":["import React from \"react\"\nimport { Modal } from 'react-bootstrap'\n\n\nconst ErrorAlreadyAddedModal = (showAlreadyAdded, handleCloseAlreadyAdded) => {\n\n  return (\n    <>\n      <Modal show={showAlreadyAdded} onHide={handleCloseAlreadyAdded}>\n        <Modal.Header closeButton>\n          <h4 className=\"thin my-auto\">This product is already in your cart</h4>\n        </Modal.Header>\n      </Modal>\n      {/* <Modal id=\"loginError\" show={showLoginError} onHide={handleCloseLoginError}>\n        <Modal.Header closeButton>\n          <h4 className=\"thin my-auto\">Oops, you need to be logged in first</h4>\n        </Modal.Header>\n      </Modal> */}\n    </>\n  )\n}\n\nexport default ErrorAlreadyAddedModal\n\n\n\n"]},"metadata":{},"sourceType":"module"}